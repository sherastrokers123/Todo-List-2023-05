{"ast":null,"code":"var _jsxFileName = \"/Users/alisher/Documents/Todo-List-2023-05/TodoList-4/src/Components/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [error, setError] = useState(null);\n  const onNewTaskTitleChangeHandler = e => {\n    setNewTaskTitle(e.currentTarget.value);\n    setError(null);\n  };\n  const onNewTaskTitleOnKeyDown = e => {\n    if (e.code === \"Enter\" && newTaskTitle.trim() !== '') {\n      props.addTask(newTaskTitle.trim());\n      setNewTaskTitle(\"\");\n    } else {\n      setError(\"Эй прострейшее не может быт пустым\");\n    }\n  };\n  const addTask = () => {\n    if (newTaskTitle.trim() !== '') {\n      props.addTask(newTaskTitle.trim());\n      setNewTaskTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n  const onAllChangeFilterHandler = () => {\n    props.changeFilter(\"All\");\n  };\n  const onActiveChangeFilterHandler = () => {\n    props.changeFilter(\"Active\");\n  };\n  const onCompletedChangeFilterHandler = () => {\n    props.changeFilter(\"Completed\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTaskTitle,\n        onChange: onNewTaskTitleChangeHandler,\n        onKeyDown: onNewTaskTitleOnKeyDown,\n        className: error ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        const onRemoveHandler = () => {\n          props.removeTask(t.id);\n        };\n        const onChangeHandlerCheckBox = e => {\n          props.changeStatusCheckbox(t.id, e.currentTarget.checked);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: t.isDone === true ? \"is-done\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onRemoveHandler,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone,\n            onChange: onChangeHandlerCheckBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === \"All\" ? \"active-filter\" : \"\",\n        onClick: onAllChangeFilterHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === \"Active\" ? \"active-filter\" : \"\",\n        onClick: onActiveChangeFilterHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === \"Completed\" ? \"active-filter\" : \"\",\n        onClick: onCompletedChangeFilterHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Todolist, \"TVYKOWQGK71XE8eo0WYwr0DjyBM=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","newTaskTitle","setNewTaskTitle","error","setError","onNewTaskTitleChangeHandler","e","currentTarget","value","onNewTaskTitleOnKeyDown","code","trim","addTask","onAllChangeFilterHandler","changeFilter","onActiveChangeFilterHandler","onCompletedChangeFilterHandler","title","tasks","map","t","onRemoveHandler","removeTask","id","onChangeHandlerCheckBox","changeStatusCheckbox","checked","isDone","filter"],"sources":["/Users/alisher/Documents/Todo-List-2023-05/TodoList-4/src/Components/Todolist.tsx"],"sourcesContent":["import React, { ChangeEvent, useState, KeyboardEvent } from \"react\"\nimport { FilterValuesType } from \"../App\"\n\nexport type TaskType = {\n    id: string,\n    title: string,\n    isDone: boolean,\n}\n\ntype TodolistPropsType = {\n    title: string,\n    tasks: TaskType[],\n    removeTask: (id: string) => void,\n    changeFilter: (value: FilterValuesType) => void,\n    addTask: (title: string) => void,\n    changeStatusCheckbox: (taskID: string, isDone: boolean) => void,\n    filter: FilterValuesType\n}\n\nexport function Todolist(props: TodolistPropsType) {\n\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const onNewTaskTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewTaskTitle(e.currentTarget.value);\n        setError(null);\n    };\n    const onNewTaskTitleOnKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.code === \"Enter\" && newTaskTitle.trim() !== '') {\n            props.addTask(newTaskTitle.trim());\n            setNewTaskTitle(\"\");\n        }\n        else {\n            setError(\"Эй прострейшее не может быт пустым\");\n        }\n    };\n\n    const addTask = () => {\n        if (newTaskTitle.trim() !== '') {\n            props.addTask(newTaskTitle.trim());\n            setNewTaskTitle(\"\");\n        } else {\n            setError(\"Title is required\");\n        }\n    };\n    const onAllChangeFilterHandler = () => {\n        props.changeFilter(\"All\")\n    };\n    const onActiveChangeFilterHandler = () => {\n        props.changeFilter(\"Active\")\n    };\n    const onCompletedChangeFilterHandler = () => {\n        props.changeFilter(\"Completed\")\n    };\n\n    return (\n        <div>\n            <h1>{\n                props.title\n            }</h1>\n            <div>\n                <input\n                    value={newTaskTitle}\n                    onChange={onNewTaskTitleChangeHandler}\n                    onKeyDown={onNewTaskTitleOnKeyDown}\n                    className={error ? \"error\" : \"\"}\n                />\n                <button onClick={addTask}>+</button>\n                {error && <div className=\"error-message\">{error}</div>}\n            </div>\n\n            <ul>\n                {\n                    props.tasks.map((t) => {\n                        const onRemoveHandler = () => {\n                            props.removeTask(t.id)\n                        }\n                        const onChangeHandlerCheckBox = (e: ChangeEvent<HTMLInputElement>) => {\n                            props.changeStatusCheckbox(t.id, e.currentTarget.checked)\n                        }\n                        return (\n                            <li className={t.isDone === true ? \"is-done\" : \"\"} key={t.id}>\n                                <button onClick={onRemoveHandler}>X</button>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={t.isDone}\n                                    onChange={onChangeHandlerCheckBox}\n                                />\n                                <span>{t.title}</span>\n                            </li>\n                        )\n\n                    })\n                }\n            </ul>\n            <div>\n                <button\n                    className={props.filter === \"All\" ? \"active-filter\" : \"\"} onClick={onAllChangeFilterHandler}>All\n                </button>\n                <button\n                    className={props.filter === \"Active\" ? \"active-filter\" : \"\"}\n                    onClick={onActiveChangeFilterHandler}>Active\n                </button>\n                <button\n                    className={props.filter === \"Completed\" ? \"active-filter\" : \"\"} onClick={onCompletedChangeFilterHandler}>Completed\n                </button>\n            </div>\n        </div >\n    )\n} "],"mappings":"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"},"metadata":{},"sourceType":"module"}